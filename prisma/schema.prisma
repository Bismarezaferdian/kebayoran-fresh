// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  name      String
  email     String
  Cart      Cart[]
}

model Banner {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  headTitle String
  mainTitle String
  desc      String?
  image     String
}

model Category {
  id        String    @id @default(cuid())
  createdAt DateTime  @default(now())
  title     String
  desc      String
  img       String?
  slug      String    @unique
  product   Product[]
}

model Option {
  id        String     @id @default(cuid())
  createdAt DateTime   @default(now())
  title     String
  price     Int
  weight    Int
  product   Product    @relation(fields: [prodSlug], references: [slug])
  prodSlug  String
  CartItem  CartItem[]
}

model Product {
  id         String     @id @default(cuid())
  createdAt  DateTime   @default(now())
  title      String
  desc       String
  img        String?
  slug       String     @unique
  price      Decimal
  isFeatured Boolean    @default(false)
  category   Category   @relation(fields: [catSlug], references: [slug])
  catSlug    String //catslug adalah url 
  weight     Int
  option     Option[] //product can have zero option
  CartItem   CartItem[]
}

model Cart {
  id        String     @id @default(cuid())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  cartItems CartItem[]
  User      User       @relation(fields: [userId], references: [id])
  userId    String     @unique
}

model CartItem {
  id       String  @id @default(cuid())
  quantity Int     @default(1)
  Option   Option? @relation(fields: [optionId], references: [id])
  optionId String?
  product  Product @relation(fields: [prodId], references: [id])
  prodId   String
  cart     Cart    @relation(fields: [cartId], references: [id])
  cartId   String
}

// model Order {
//   id        String   @id @default(cuid())
//   createdAt DateTime @default(now())
//   price     Decimal
//   products  Json[]
//   status    String
//   intent_id String?  @unique
// }
